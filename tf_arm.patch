diff --git a/tensorflow/contrib/makefile/build_all_linux.sh b/tensorflow/contrib/makefile/build_all_linux.sh
index 1a1ab54a53..db25e45574 100644
--- a/tensorflow/contrib/makefile/build_all_linux.sh
+++ b/tensorflow/contrib/makefile/build_all_linux.sh
@@ -43,6 +43,6 @@ tensorflow/contrib/makefile/compile_linux_protobuf.sh
 
 # Build TensorFlow.
 make -j"${JOB_COUNT}" -f tensorflow/contrib/makefile/Makefile \
-  OPTFLAGS="-O3 -march=native" \
-  HOST_CXXFLAGS="--std=c++11 -march=native" \
+  OPTFLAGS="-Os" \
+  HOST_CXXFLAGS="--std=c++11 -Os" \
   MAKEFILE_DIR=$SCRIPT_DIR
diff --git a/tensorflow/c/c_api.cc b/tensorflow/c/c_api.cc
index 19ccb6e71d..f6a211a81b 100644
--- a/tensorflow/c/c_api.cc
+++ b/tensorflow/c/c_api.cc
@@ -2294,7 +2294,7 @@ TF_WhileParams TF_NewWhile(TF_Graph* g, TF_Output* inputs, int ninputs,
 #endif  // __ANDROID__
 }
 
-#ifndef __ANDROID__
+#if !defined(__ANDROID__) && !defined(IS_SLIM_BUILD)
 namespace {
 
 // TODO(skyewm): make nodes in while loop unfetchable like in Python version
@@ -2373,7 +2373,7 @@ void TF_FinishWhileHelper(const TF_WhileParams* params, TF_Status* status,
 
 void TF_FinishWhile(const TF_WhileParams* params, TF_Status* status,
                     TF_Output* outputs) {
-#ifdef __ANDROID__
+#if defined(__ANDROID__) || defined(IS_SLIM_BUILD)
   status->status = tensorflow::errors::Unimplemented(
       "Creating while loops is not supported in Android. File a bug at "
       "https://github.com/tensorflow/tensorflow/issues if this feature is "
@@ -2396,7 +2396,7 @@ void TF_AddGradients(TF_Graph* g, TF_Output* y, int ny, TF_Output* x, int nx,
 void TF_AddGradientsWithPrefix(TF_Graph* g, const char* prefix, TF_Output* y,
                                int ny, TF_Output* x, int nx, TF_Output* dx,
                                TF_Status* status, TF_Output* dy) {
-#ifdef __ANDROID__
+#if defined(__ANDROID__) || defined(IS_SLIM_BUILD)
   status->status = tensorflow::errors::Unimplemented(
       "Adding gradients is not supported in Android. File a bug at "
       "https://github.com/tensorflow/tensorflow/issues if this feature is "
@@ -2509,7 +2509,7 @@ TF_Session* TF_LoadSessionFromSavedModel(
     TF_Graph* graph, TF_Buffer* meta_graph_def, TF_Status* status) {
 // TODO(ashankar): Remove the __ANDROID__ guard. This will require ensuring that
 // the tensorflow/cc/saved_model:loader build target is Android friendly.
-#ifdef __ANDROID__
+#if defined(__ANDROID__) || defined(IS_SLIM_BUILD)
   status->status = tensorflow::errors::Unimplemented(
       "Loading a SavedModel is not supported in Android. File a bug at "
       "https://github.com/tensorflow/tensorflow/issues if this feature is "
@@ -2819,14 +2819,14 @@ TF_Buffer* TF_GetRegisteredKernelsForOp(const char* name, TF_Status* status) {
 
 // TF_Server functions ----------------------------------------------
 
-#ifndef __ANDROID__
+#if !defined(__ANDROID__) && !defined(IS_SLIM_BUILD)
 TF_Server::TF_Server(std::unique_ptr<tensorflow::ServerInterface> server)
     : target(server->target()), server(std::move(server)) {}
 #endif  // __ANDROID__
 
 TF_Server* TF_NewServer(const void* proto, size_t proto_len,
                         TF_Status* status) {
-#ifdef __ANDROID__
+#if defined(__ANDROID__) || defined(IS_SLIM_BUILD)
   status->status = tensorflow::errors::Unimplemented(
       "Server functionality is not supported in Android");
   return nullptr;
@@ -2847,7 +2847,7 @@ TF_Server* TF_NewServer(const void* proto, size_t proto_len,
 }
 
 void TF_ServerStart(TF_Server* server, TF_Status* status) {
-#ifdef __ANDROID__
+#if defined(__ANDROID__) || defined(IS_SLIM_BUILD)
   status->status = tensorflow::errors::Unimplemented(
       "Server functionality is not supported in Android");
 #else
@@ -2856,7 +2856,7 @@ void TF_ServerStart(TF_Server* server, TF_Status* status) {
 }
 
 void TF_ServerStop(TF_Server* server, TF_Status* status) {
-#ifdef __ANDROID__
+#if defined(__ANDROID__) || defined(IS_SLIM_BUILD)
   status->status = tensorflow::errors::Unimplemented(
       "Server functionality is not supported in Android");
 #else
@@ -2865,7 +2865,7 @@ void TF_ServerStop(TF_Server* server, TF_Status* status) {
 }
 
 void TF_ServerJoin(TF_Server* server, TF_Status* status) {
-#ifdef __ANDROID__
+#if defined(__ANDROID__) || defined(IS_SLIM_BUILD)
   status->status = tensorflow::errors::Unimplemented(
       "Server functionality is not supported in Android");
 #else
@@ -2874,7 +2874,7 @@ void TF_ServerJoin(TF_Server* server, TF_Status* status) {
 }
 
 const char* TF_ServerTarget(TF_Server* server) {
-#ifdef __ANDROID__
+#if defined(__ANDROID__) || defined(IS_SLIM_BUILD)
   return nullptr;
 #else
   return server->target.c_str();
